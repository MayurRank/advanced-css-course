.card {
  // perspective - It will look rotate effect like it actually flip by going near user, so like user will feel object is actually comming out of the screen while rotating.
  // 1500px - Lower the value higher the effect
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  height: 52rem; // By setting position element we set element out of the flow (kinda like float requires clearfix), So the height of this .card element is collapsed. thta's why we need to give same height as __side

  &__side {
    height: 52rem;
    transition: all .8s ease;
    font-size: 3rem;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    -webkit-backface-visibility: hidden; // It sets whether the back face of an element is visible when turned towards the user.
    backface-visibility: hidden; // It sets whether the back face of an element is visible when turned towards the user.
    border-radius: 3px;
    box-shadow: 0 1.5rem 4rem rgba($color-black, .15); // 0 X drection, 1.5rem Y direction, 4rem blur, rgba($color-black, .15) black 15%
    overflow: hidden; // &__picture-- images are overflowing and not showing border-radius, so overflow hidden will fix it

    &--front {
      background-color: $color-white;
    }
    &--back {
      transform: rotateY(180deg); // back side we set already rotated to 180deg
      &-1 {
        background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark);
      }
      &-2 {
        background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);
      }
      &-3 {
        background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark);
      }
    }
  }

  &:hover &__side--front { // .card:hover .card__side--front  ( So when we hove .card, effect will apply on .card__side--front class element )
    transform: rotateY(-180deg); // Rotate -180deg, basically in opposite drection of 180deg
  }
  &:hover &__side--back {
    transform: rotateY(0); // Back to initial position 0
  }

  // FRONT SIDE STYLING
  &__picture {
    height: 23rem;
    background-size: cover;
    background-blend-mode: screen; // Blend back-img with gradient color that we have defined in &--1
    --webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%); /* a, b, c, d points will move as per params in x or y axis */
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%); /* a, b, c, d points will move as per params in x or y axis */

    // Apply if clip-path breaks overflow
    // border-top-left-radius: 3px;
    // border-top-right-radius: 3px;

    &--1 {
      background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark),
      url(../img/nat-5.jpg);
    }
    &--2 {
      background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark),
      url(../img/nat-6.jpg);
    }
    &--3 {
      background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark),
      url(../img/nat-7.jpg);
    }
  }

  &__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    color: $color-white;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%;
    text-align: right;
  }

  &__heading-span {
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone; // It will break boxes and allow apply properties on individual boxes, so padding will apply to both lines
    box-decoration-break: clone;

    &--1 {
      background-image: linear-gradient(to right bottom, rgba($color-secondary-light, .85), rgba($color-secondary-dark, .85)); // rgba($color-secondary-light, .85) = 85% of $color-secondary-light
    }
    &--2 {
      background-image: linear-gradient(to right bottom, rgba($color-primary-light, .85), rgba($color-primary-dark, .85)); // rgba($color-secondary-light, .85) = 85% of $color-secondary-light
    }
    &--3 {
      background-image: linear-gradient(to right bottom, rgba($color-tertiary-light, .85), rgba($color-tertiary-dark, .85)); // rgba($color-secondary-light, .85) = 85% of $color-secondary-light
    }
  }

  &__details {
    padding: 3rem;

    ul {
      list-style: none;
      width: 80%;
      margin: 0 auto;

      li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem;

        &:not(:last-child) {
          border-bottom: 1px solid $color-grey-light-2;
        }
      }
    }
  }

  &__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center;
  }

  &__price-box {
    color: $color-white;
    margin-bottom: 8rem;
  }

  &__price-only {
    font-size: 1.4rem;
    text-transform: uppercase;
  }

  &__price-value {
    font-size: 6rem;
    font-weight: 100;
  }

  // @include respond(tab-port) {
  @media only screen and (max-width: 56.25em), only screen and (hover: none) { // For wide screens with no hover like iPads, hover:none checked if screen doen't have hover.
    height: auto; // Heiht no longer required since we don't have back side for tab-mobile view
    border-radius: 3px;
    background-color: $color-white;
    box-shadow: 0 1.5rem 4rem rgba($color-black, .15);

    &__side {
      height: auto;
      position: relative; // Position no longer needed absolute
      box-shadow: none;

      &--back {
        transform: rotateY(0); // back side we set already rotated to 180deg, changed to 0
        clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%);
      }
    }

    &:hover &__side--front {
      transform: rotateY(0); // Front side should not rorate
    }

    &__details {
      padding: 1rem 3rem;
    }


    &__cta {
      position: relative;
      top: 0;
      left: 0;
      transform: translate(0);
      width: 100%;
      padding: 7rem 4rem 4rem 4rem;
    }

    &__price-box {
      margin-bottom: 3rem;
    }

    &__price-value {
      font-size: 4rem;
    }
  }

}