.form {

  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    // Input will not auto inherit this props
    font-family: inherit;
    color: inherit;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    border: none;
    border-bottom: 3px solid transparent; // On focus add 3px space, so it will jump, to avoid default we add 3px invisible border
    width: 90%;
    display: block;
    background-color: rgba($color-white, .5);
    transition: all .3s;

    @include respond(tab-port) {
      width: 100%;
    }

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, .1);
      border-bottom: 3px solid $color-primary;
    }
    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark; // Browser add invalid sudo class based on HTML validation, so we can show custom error color/design based on that
    }
    &::-webkit-input-placeholder {
      color: $color-grey-dark-2; // Placeholder font color
    }

  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: .7rem;
    display: block;
    transition: all .3s;
  }

  // When placeholder shown, so initially it's basically initial postion (non focused input), also we are hiding label
  &__input:placeholder-shown + &__label { // + is to Select direct adjecent sibling of input and that is lable (basically just after input)
    // We can just use visibility to hide, but we also want animation so opacity also required
    opacity: 0;
    // visibility hidden is for to remove elem from page
    visibility: hidden;
    transform: translateY(-4rem); // It will place label's initial position near input, so it will look like label is comming right from input on start typing (focus)
  }

  &__radio-group {
    width: 49%;
    display: inline-block;

    @include respond(tab-port) {
      width: 100%;
      margin-bottom: 2rem;
    }
  }

  &__radio-input {
    display: none;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 4.5rem;
  }

  &__radio-button {
    width: 3rem;
    height: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -.4rem;

    &::after {
      content: "";
      display: block;
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0;
      transition: opacity .2s;
    }
  }
  // ~ is general sibling selector -> radio-label -> (child is) -> radio-button
  &__radio-input:checked ~ &__radio-label &__radio-button::after {
    opacity: 1;
  }
  
}